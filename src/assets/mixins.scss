@use './palette' as *;

@function transparentize($color, $amount) {
  @return rgba($color, $amount);
}

@mixin scrollbar() {
  $track-background: transparentize($neutral-90, 10%);
  $track-radius: var(--border-radius-l);
  $thumb-color: transparentize($neutral-95, 25%);
  $thumb-hover-color: transparentize($neutral-95, 35%);

  &::-webkit-scrollbar {
    width: 20px;
  }

  &::-webkit-scrollbar-track {
    border: solid 1px transparent;
    border-radius: 0 $track-radius $track-radius 0 / 0 $track-radius $track-radius 0;
    background: $track-background;
  }

  &::-webkit-scrollbar-thumb {
    transition: 0.25s ease-out;
    border: 6px solid transparent;
    border-radius: 9999px;
    background-clip: content-box;
    background-color: $thumb-color;
  }

  &::-webkit-scrollbar-thumb:hover {
    background-color: $thumb-hover-color;
  }
}

$breakpoints: (
  s: 480px,
  m: 768px,
  l: 1024px,
  xl: 1280px,
  2xl: 1440px,
);

@mixin mq($size) {
  @if map-has-key($breakpoints, $size) {
    $min-width: map-get($breakpoints, $size);
    @media (min-width: #{$min-width}) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint size #{$size}. Please use 's', 'm', 'l', or 'xl'.";
  }
}

@mixin sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  position: absolute !important;
  clip-path: inset(50%) !important;
  margin: -1px !important;
  padding: 0 !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  white-space: nowrap !important;
}

$outline-value: 4px solid transparentize($neutral-95, 30%);
@mixin outline() {
  outline: $outline-value;
}
